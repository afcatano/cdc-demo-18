apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      service: kafka
  template:
    metadata:
      labels:
        service: kafka
    spec:
      enableServiceLinks: false
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:5.5.1
      #  volumeMounts:
      #  - name: kafka-volume-mount
      #    mountPath: /var/lib/kafkaql/data
      #    subPath: kafka
        ports:
        - containerPort: 9092
        - containerPort: 9999
        - containerPort: 19092
        env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: 'LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092'
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "LISTENER_DOCKER_INTERNAL"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zoo:2181"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_LOG4J_LOGGERS
          value: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: '1'
        - name: KAFKA_JMX_PORT
          value: "9999"
        - name: KAFKA_J_HOSMXTNAME
          value: "127.0.0.1"
        resources:
         limits:
            cpu: 500m
            memory: 500Mi
      restartPolicy: Always
    #  volumes:
    #  - name: kafka-volume-mount
    #    persistentVolumeClaim:
    #      claimName: kafka-pvc